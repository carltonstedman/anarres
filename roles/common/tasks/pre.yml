---
- name: install pre-requisite packages
  pacman: name={{ item }} state=latest
  with_items:
  - openssh
  - openssl
  - git
  - gnupg
  - base-devel
  - rsync
  when: ansible_os_family == "Archlinux"

## ssh

- name: assure {{ username }} owns their ssh directory
  file: path={{ ssh.keydir }} state=directory recurse=true
        owner={{ username }} group={{ username }} mode=0700

- name: configure ssh
  template: src=dotssh/config.j2 dest={{ home }}/.ssh/config
            owner={{ username }} group={{ username }} mode=0600

## git

- name: configure git
  template: src=dotgitconfig.j2 dest={{ home }}/.gitconfig
            owner={{ username }} group={{ username }} mode=0600

## gpg/gnupg

- name: assure {{ username }} owns their gnupg directory
  file: path={{ home }}/.gnupg state=directory recurse=true
        owner={{ username }} group={{ username }} mode=0700

- name: use gpg agent
  copy: content=use-agent
        dest={{ home }}/.gnupg/gpg.conf
        owner={{ username }} group={{ username }} mode=0640

- name: configure gpg agent
  template: src=dotgnupg/gpg-agent.conf dest={{ home }}/.gnupg/gpg-agent.conf
            owner={{ username }} group={{ username }} mode=0640
  notify:
  - reload gpgagent

## yaourt

- name: check if yaourt already installed
  shell: pacman -Q yaourt 2>&1 | grep -v 'not found' || echo "no"
  register: yaourt_installed
  when: ansible_os_family == "Archlinux"

- name: download yaourt pkgbuild tarballs
  get_url: url=https://aur.archlinux.org/cgit/aur.git/snapshot/{{ item }}
           dest=/tmp/{{ item }}
  with_items:
    - package-query.tar.gz
    - yaourt.tar.gz
  when: ansible_os_family == "Archlinux" and yaourt_installed.stdout == "no"

- name: untar yaourt tarballs
  shell: tar zxvf {{ item }}.tar.gz
  args:
    chdir: /tmp
  become: yes
  become_user: "{{ username }}"
  with_items:
    - package-query
    - yaourt
  when: ansible_os_family == "Archlinux" and yaourt_installed.stdout == "no"

- name: build/install yaourt pkgbuilds
  shell: makepkg -sri --noconfirm
  args:
    chdir: "/tmp/{{ item }}"
  become: yes
  become_user: "{{ username }}"
  with_items:
    - package-query
    - yaourt
  when: ansible_os_family == "Archlinux" and yaourt_installed.stdout == "no"
